{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/vehicles.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"card text-white bg-dark mb-3\\\">\\n    <div class=\\\"card-header\\\">Lackofleetiosis</div>\\n    <div class=\\\"card-body\\\">\\n      <p role=\\\"alert\\\" *ngFor=\\\"let message of messages\\\">{{message}}</p>\\n\\n      <form class=\\\"form-inline\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"addVehicle(form.value)\\\">\\n        <div class=\\\"form-group mx-sm-3 mb-2\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"VIN\\\" type=\\\"text\\\" formControlName=\\\"vin\\\">\\n        </div>\\n\\n        <button class=\\\"btn btn-primary mb-2\\\" type=\\\"submit\\\" [disabled]=\\\"loading\\\">\\n          <span *ngIf=\\\"!loading\\\">Add Vehicle</span>\\n          <em *ngIf=\\\"loading\\\">one moment...</em>\\n        </button>\\n      </form>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-3 col-md-4\\\" *ngFor=\\\"let vehicle of vehicles\\\">\\n      <div class=\\\"card\\\">\\n        <img class=\\\"card-img-top\\\" *ngIf=\\\"vehicle.image_url\\\" [src]=\\\"vehicle.image_url\\\">\\n        <img class=\\\"card-img-top\\\" *ngIf=\\\"!vehicle.image_url\\\" src=\\\"assets/default.png\\\">\\n\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\">{{vehicle.year}} {{vehicle.make}} {{vehicle.model}}</h5>\\n          <h6 class=\\\"card-subtitle mb-2 text-muted\\\">{{vehicle.vin}}</h6>\\n        </div>\\n\\n        <ul class=\\\"list-group list-group-flush\\\">\\n          <li class=\\\"list-group-item\\\"><strong>Trim:</strong> {{vehicle.trim}}</li>\\n          <li class=\\\"list-group-item\\\"><strong>Color:</strong> {{vehicle.color}}</li>\\n          <li class=\\\"list-group-item\\\">\\n            <strong>Efficiency: </strong>\\n\\n            <span *ngIf=\\\"vehicle.status == 'processed'\\\">\\n              {{vehicle.efficiency || 'N/A'}}\\n            </span>\\n\\n            <span *ngIf=\\\"vehicle.status == 'unprocessed'\\\">\\n              <em>calculating...</em>\\n              &nbsp;\\n              <button class=\\\"btn btn-primary mb-2\\\" (click)=\\\"loadVehicles()\\\">Refresh</button>\\n            </span>\\n\\n            <span *ngIf=\\\"vehicle.status == 'error'\\\">\\n              <button class=\\\"btn btn-primary mb-2\\\" (click)=\\\"reprocessVehicle(vehicle)\\\">Calculate</button>\\n            </span>\\n          </li>\\n        </ul>\\n      </div>\\n      <br>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"vehicles.length == 0\\\">\\n    <div class=\\\"col-xs-3 col-md-4\\\">\\n      <p class=\\\"alert alert-info\\\" role=\\\"alert\\\">No vehicles have been added.</p>\\n      <img src=\\\"https://media.giphy.com/media/dYQh2AcRNN6Jq/giphy.gif\\\">\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { VehiclesService } from './vehicles.service';\nimport { Vehicle } from './vehicle';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  form;\n  messages = [];\n  vehicles: Vehicle[] = [];\n  loading = false;\n\n  constructor(\n    private vehiclesService: VehiclesService,\n    private formBuilder: FormBuilder\n  ) {\n    this.form = this.formBuilder.group({vin: ''});\n    this.loadVehicles();\n  }\n\n  loadVehicles() {\n    this.vehiclesService.fetch().subscribe(vehicles => this.vehicles = vehicles);\n  }\n\n  addVehicle(vehicle: Vehicle) {\n    this.loading = true;\n    this.messages = [];\n\n    this.vehiclesService.add(vehicle).subscribe(\n      res => {\n        this.loadVehicles();\n        this.form.reset();\n        this.loading = false;\n      }, (err) => {\n        this.loading = false;\n        this.messages = err.error.errors;\n      }\n    );\n  }\n\n  reprocessVehicle(vehicle: Vehicle) {\n    this.vehiclesService.reprocess(vehicle).subscribe(data => this.loadVehicles())\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { catchError, tap, map } from 'rxjs/operators';\nimport { Vehicle } from './vehicle';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VehiclesService {\n  constructor(private http: HttpClient) {}\n\n  add(vehicle: Vehicle): Observable<Vehicle> {\n    return this.http.post<Vehicle>('http://localhost:3000/vehicles', vehicle, httpOptions).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  fetch(): Observable<Vehicle[]> {\n    return this.http.get<Vehicle[]>('http://localhost:3000/vehicles').pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  reprocess(vehicle: Vehicle): Observable<any> {\n    return this.http.post(`http://localhost:3000/vehicles/${vehicle.id}/reprocess`, null).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  private handleError(error: any) {\n    console.error(error);\n    return throwError(error);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}